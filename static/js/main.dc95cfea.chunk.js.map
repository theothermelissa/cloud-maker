{"version":3,"sources":["components/Spins.js","components/Colors.js","components/ColorButtons/ColorsForButtons.js","components/ImageControls/SliderInput.js","components/ImageControls/DirectionButtons.js","components/ImageControls/EaseButtons.js","components/ImageControls/ImageControls.js","components/ColorButtons/Button.js","components/ColorButtons/ButtonList.js","components/ControlPanel.js","components/BodyContent.js","components/App.js","serviceWorker.js","index.js","images/smoke.png"],"names":["spinRight","keyframes","_templateObject","spinLeft","_templateObject2","mysky","ColorsForButtons","sky","battleship","royal","charcoal","navy","Tray","styled","div","SliderInput_templateObject","SliderName","p","SliderInput_templateObject2","SliderBox","_templateObject3","SliderInput","props","property","handleChange","name","max","min","defaultValue","formatter","react_default","a","createElement","slider","onChange","value","tipFormatter","RadioGroup","Radio","Group","DirectionButtonsContainer","DirectionButtons_templateObject","DirectionButtons","_this$props","this","setDirection","direction","event","target","es_radio","color","React","Component","EaseButtonsContainer","EaseButtons_templateObject","EaseButtons","setEase","animationTimingFunction","EaseButtons_RadioGroup","speedFormatter","concat","opacityFormatter","sizeFormatter","ImageControlsContainer","ImageControls_templateObject","ControlsTitle","h2","ImageControls_templateObject2","ImageControls","imageName","layerSettings","ImageControls_SliderInput","opacity","firstIcon","secondIcon","size","leftPosition","topPosition","speed","DirectionButtons_DirectionButtons","directionValue","EaseButtons_EaseButtons","ease","ColorName","Button_templateObject","ColorButton","button","Button_templateObject2","_ref","Button","_ref2","hexValue","setBackgroundColor","onClick","ButtonContainer","ButtonList_templateObject","ButtonList","setColor","_","toPairs","colors","map","_ref3","Object","slicedToArray","colorName","ColorButtons_Button","key","ControlsContainer","ControlPanel_templateObject","ImageBox","ControlPanel_templateObject2","ControlPanel","components_ImageControls_ImageControls","assign","ColorButtons_ButtonList","coral","sizeInPixels","ExplanationBox","BodyContent_templateObject","Explaination","BodyContent_templateObject2","GetStartedButton","BodyContent_templateObject3","BodyContainer","_templateObject4","SmokeBackground","_templateObject5","backgroundColor","Image","img","_templateObject6","result","spin","BodyContent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","previousState","objectSpread","defineProperty","state","showControls","background","lower","back","middle","front","_this2","src","smoke","alt","components_ControlPanel","type","App","components_BodyContent","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.dc95cfea.chunk.js","sourcesContent":["import { keyframes} from \"styled-components\";\n\nexport const Extraslow = \"250s\";\nexport const Slow = \"200s\";\nexport const Medium = \"150s\";\nexport const Fast = \"90s\";\nexport const Extrafast = \"30s\";\n\nexport const spinRight = keyframes`\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n`;\n\nexport const spinLeft = keyframes`\n  from { transform: rotate(360deg); }\n  to { transform: rotate(0deg); }\n`;\n\nexport const spin = (direction) => {\n  let result;\n  switch (direction) {\n    case \"right\":\n      result = spinRight;\n      break;\n    case \"left\":\n      result = spinLeft;\n      break;\n    default: \n      result = spinLeft;\n  }\n  return result;\n};\n","export const mylightestgray = '#F0F0F0';\nexport const myemerald = '#07926A';\nexport const mycharcoal = '#44444C';\nexport const myruby = '#BF2927';\nexport const myturquoise = '#1CDCD4';\nexport const mycoral = '#FC6464';\nexport const myamethyst = '#863DB8';\nexport const mysaphire = '#12219D';\nexport const mymint = '#7AE2D2';\nexport const mygold = '#DAA41E';\nexport const myroyal = '#14439C';\nexport const myviolet = '#541C8C';\nexport const mybluegray = '#6C7C8C';\nexport const mynavy = '#06095A';\nexport const mysky = '#A4CCF4';\n","import { mysky, myroyal, mycharcoal, mynavy, mybluegray } from '../Colors';\n\nexport default {\n  sky: mysky,\n  battleship: mybluegray,\n  royal: myroyal,\n  charcoal: mycharcoal,\n  navy: mynavy,\n}\n","import React from \"react\";\nimport { Slider, Icon } from 'antd';\nimport styled from 'styled-components';\nimport { mysky, mycharcoal } from '../Colors';\n\nconst Tray = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SliderName = styled.p`\n  color: ${mycharcoal};\n`;\n\nconst SliderBox = styled.div`\n  width: 100%;\n  /* .anticon {\n    position: absolute;\n    margin-top: 0px;\n    top: -2px;\n    width: 16px;\n    height: 16px;\n    line-height: 1;\n    color: white;\n    &:first-child {\n      left: 0;\n    }\n    &:last-child {\n      right: 0;\n    }\n  } */\n  .ant-slider {\n    margin-top: 0;\n  }\n  .ant-slider-track {\n    background-color: ${mysky};\n  }\n  .ant-slider-handle {\n    border-color: ${mysky};\n  }\n`;\n\nconst SliderInput = (props) => {\n  const { \n    property,\n    handleChange,\n    name,\n    max,\n    min,\n    defaultValue,\n    formatter,\n    // firstIcon,\n    // secondIcon \n  } = props;\n\n  const changeSetting = (value) => {\n    return (\n      handleChange(name, property, value)\n    )\n  };\n\n  return (\n    <Tray>\n      <SliderName>{property}</SliderName>\n      <SliderBox>\n        {/* <Icon type={firstIcon} /> */}\n        <Slider \n          onChange={changeSetting}\n          defaultValue={defaultValue}\n          min={min}\n          max={max}\n          tipFormatter={formatter} />\n        {/* <Icon type={secondIcon} /> */}\n      </SliderBox>\n    </Tray>\n  )\n};\n\nexport default SliderInput;\n\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Radio } from 'antd';\nimport { mylightestgray, mysky } from '../Colors';\n\nconst RadioGroup = Radio.Group;\n\nconst DirectionButtonsContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  padding: 5px 0px;\n  .ant-radio-inner::after {\n    background-color: ${mysky};\n  }\n  .ant-radio-checked .ant-radio-inner {\n    border-color: ${mysky};\n  }\n`;\n\nexport default class DirectionButtons extends React.Component {\n  render() {\n    const { name, setDirection, direction } = this.props;\n    return (\n      <DirectionButtonsContainer>\n        <RadioGroup name={name} onChange={(event) => setDirection(event.target.value)} value={direction}>\n          <Radio color={mylightestgray} value={\"left\"}>Spin Left</Radio>\n          <Radio color={mylightestgray} value={\"right\"}>Spin Right</Radio>\n        </RadioGroup>\n      </DirectionButtonsContainer>\n    );\n  }\n};\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Radio } from 'antd';\nimport { mysky } from '../Colors';\n\nconst RadioGroup = Radio.Group;\n\nconst EaseButtonsContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  padding: 5px 0px;\n  .ant-radio-inner::after {\n    background-color: ${mysky};\n  }\n  .ant-radio-checked .ant-radio-inner {\n    border-color: ${mysky};\n  }\n`;\n\nexport default class EaseButtons extends React.Component {\n  render() {\n    const { name, setEase, animationTimingFunction } = this.props;\n    return (\n      <EaseButtonsContainer>\n        <RadioGroup name={name} onChange={(event) => setEase(event.target.value)} value={animationTimingFunction}>\n          {/* <Radio value={\"ease-in\"}>Ease In</Radio> */}\n          {/* <Radio value={\"ease-out\"}>Ease Out</Radio> */}\n          <Radio value={\"ease-in-out\"}>Ease In & Out</Radio>\n          <Radio value={\"linear\"}>Linear</Radio>\n        </RadioGroup>\n      </EaseButtonsContainer>\n    );\n  }\n};\n","import React from \"react\";\nimport styled from 'styled-components';\nimport SliderInput from './SliderInput';\nimport DirectionButtons from './DirectionButtons';\nimport EaseButtons from './EaseButtons';\nimport { mylightestgray, mycoral } from '../Colors';\n\nconst MAX_SPEED = 300;\nconst MIN_SPEED = 15;\nconst MIN_SIZE = 500;\nconst MAX_SIZE = 2500;\nconst MIN_OPACITY = 0;\nconst MAX_OPACITY = 100;\nconst MIN_POSITION = -900;\nconst MAX_POSITION = 900;\n\nconst speedFormatter = value => {\n  return `${value}s`;\n};\nconst opacityFormatter = value => {\n  return `${value}%`;\n};\nconst sizeFormatter = value => {\n  return `${value}px`;\n};\n\nconst ImageControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-width: 200px;\n  margin: 7px;\n  padding: 5px 15px;\n  background-color: ${mylightestgray};\n  border-radius: 5px;\n`;\n\nconst ControlsTitle = styled.h2`\n  width: 100%;\n  color: ${mycoral};\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst ImageControls = (props) => {\n  const { handleChange, imageName } = props;\n  const layerSettings = props[imageName];\n\n  return (\n    <ImageControlsContainer >\n      <ControlsTitle >{imageName}</ControlsTitle>\n      <SliderInput \n        name={imageName} \n        property=\"opacity\"\n        handleChange={handleChange}\n        max={MAX_OPACITY}\n        min={MIN_OPACITY}\n        defaultValue={layerSettings.opacity}\n        value={layerSettings.opacity}\n        formatter={opacityFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"size\"\n        handleChange={handleChange}\n        max={MAX_SIZE}\n        min={MIN_SIZE}\n        defaultValue={layerSettings.size}\n        value={layerSettings.size}\n        formatter={sizeFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"leftPosition\"\n        handleChange={handleChange}\n        max={MAX_POSITION}\n        min={MIN_POSITION}\n        defaultValue={layerSettings.leftPosition}\n        value={layerSettings.leftPosition}\n        formatter={sizeFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"topPosition\"\n        handleChange={handleChange}\n        max={MAX_POSITION}\n        min={MIN_POSITION}\n        defaultValue={layerSettings.topPosition}\n        value={layerSettings.topPosition}\n        formatter={sizeFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"speed\"\n        handleChange={handleChange}\n        max={MAX_SPEED}\n        min={MIN_SPEED}\n        defaultValue={layerSettings.speed}\n        value={layerSettings.speed}\n        formatter={speedFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <DirectionButtons \n        name={imageName} \n        direction={layerSettings.direction} \n        setDirection={(directionValue) => \n          handleChange(imageName, \"direction\", directionValue)} />\n      <EaseButtons \n        name={imageName} \n        animationTimingFunction={layerSettings.animationTimingFunction} \n        setEase={(ease) => \n          handleChange(imageName, \"animationTimingFunction\", ease)} />\n    </ImageControlsContainer>\n  );\n};\n\nexport default ImageControls;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ColorName = styled.h2`\n  color: white;\n  text-transform: uppercase;\n  margin: 0;\n  font-size: 14px;\n`;\n\nconst ColorButton = styled.button`\n  display: flex;\n  flex-grow: 1;\n  height: 32px;\n  justify-content: center;\n  margin: 3px 7px;\n  border-radius: 5px;\n  background-color: ${ ({color}) => color };\n`;\n\nconst Button = ({ name, hexValue, setBackgroundColor }) => (\n    <ColorButton color={hexValue} onClick={() => setBackgroundColor(hexValue)} >\n      <ColorName color={hexValue}>\n        {name}\n      </ColorName>\n    </ColorButton>\n);\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from './Button';\nimport colors from \"./ColorsForButtons\";\nimport _ from \"lodash\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n`;\n\nconst ButtonList = ({ handleChange, imageName }) => {\n  const setColor = (hexValue) => {\n    return (\n      handleChange(imageName, \"color\", hexValue)\n  )};\n\n  return (\n    <ButtonContainer>{\n      _.toPairs(colors).map( ([colorName, hexValue]) => (\n        <Button setBackgroundColor={setColor} key={hexValue} name={colorName} hexValue={hexValue} />\n      ))\n  }</ButtonContainer>\n)};\n\nexport default ButtonList;\n","import React from \"react\";\nimport styled from 'styled-components';\nimport ImageControls from './ImageControls/ImageControls';\nimport ButtonList from './ColorButtons/ButtonList';\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: start;\n`;\n\nconst ImageBox = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n`;\n\nconst ControlPanel = (props) => {\n  return (\n    <ControlsContainer>\n        <ImageBox>\n          <ImageControls {...props} imageName=\"lower\" />\n          <ImageControls {...props} imageName=\"back\" />\n          <ImageControls {...props} imageName=\"middle\" />\n          <ImageControls {...props} imageName=\"front\" />\n        </ImageBox>\n      <ButtonList {...props} imageName=\"background\" />\n    </ControlsContainer>\n  );\n};\n\nexport default ControlPanel;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport smoke from \"../images/smoke.png\";\nimport { spin } from \"./Spins\";\nimport colors from \"./ColorButtons/ColorsForButtons\";\nimport ControlPanel from './ControlPanel';\nimport { Button } from 'antd';\n\nconst { royal, coral } = colors;\n\nconst speedInSeconds = (speed) => {\n  return `${speed}s`\n};\nconst sizeInPixels = (size) => {\n  return `${size}px`\n};\nconst convertToFraction = value => {\n  return value/100;\n};\n\nconst ExplanationBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  align-self: center;\n  flex: 1;\n  width: 40vw;\n  height: 100%;\n`;\n\nconst Explaination = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\n  const GetStartedButton = styled(Button)`\n    width: 200px;\n    margin: 10px;\n    background-color: ${coral};\n`;\n\nconst BodyContainer = styled.div`\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  min-height:100%;\n`;\n\nconst SmokeBackground = styled.div`\n  position: relative;\n  height: 50vh;\n  width: 100vw;\n  overflow: hidden;\n  background: ${props => props.backgroundColor};\n`;\n\nconst Image = styled.img`\n  position: absolute;  \n  left: ${props => sizeInPixels(props.leftPosition)};\n  top: ${props => sizeInPixels(props.topPosition)};\n  opacity: ${props => convertToFraction(props.opacity)};\n  width: auto;\n  margin: 0px;\n  height: ${props => sizeInPixels(props.size)};\n  animation: \n    ${props => spin(props.direction)} \n    ${ props => speedInSeconds(props.speed) } \n    ${props => props.animationTimingFunction} \n    infinite;\n`;\n\nclass BodyContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showControls: false,\n      background: {\n        color: royal,\n      },\n      lower: {  \n        imageName: \"lower\",\n        leftPosition: -350,\n        topPosition: 50,\n        speed: 80,\n        direction: \"left\",\n        opacity: 20,\n        size: 2200,\n        animationTimingFunction: \"linear\",\n      },\n      back: {  \n        imageName: \"back\",\n        speed: 150,\n        leftPosition: -600,\n        topPosition: -500,\n        direction: \"right\",\n        size: 2400,\n        opacity: 60,\n        animationTimingFunction: \"linear\",\n      },\n      middle: {  \n        imageName: \"middle\",\n        speed: 150,\n        leftPosition: -300,\n        topPosition: -200,\n        direction: \"left\",\n        size: 1400,\n        opacity: 60,\n        animationTimingFunction: \"linear\",\n      },\n      front: {  \n        imageName: \"front\",\n        speed: 150,\n        direction: \"right\",\n        leftPosition: 250,\n        topPosition: -160,\n        opacity: 75,\n        size: 1700,\n        animationTimingFunction: \"linear\",\n      },\n    }\n  }\n\n  render() {\n    return (\n      <BodyContainer>\n      <SmokeBackground backgroundColor={this.state.background.color}>\n        <Image {...this.state.back} src={smoke} alt=\"Smoke\" />\n        <Image {...this.state.middle} src={smoke} alt=\"Smoke\" />\n        <Image {...this.state.front} src={smoke} alt=\"Smoke\" />\n        <Image {...this.state.lower} src={smoke} alt=\"Smoke\" />\n      </SmokeBackground>\n      { this.state.showControls ? (\n        <ControlPanel {...this.state} handleChange={this.handleChange} />\n      ) : (\n        <ExplanationBox>\n          <Explaination>\n            <p>\n              Video? Nope. \n            </p>\n            <p>\n              It's four layers of a single image, styled and animated with simple CSS. And by changing the \n              background color, speed, opacity, size, and positioning, you can achieve vastly different effects.\n            </p>\n          </Explaination>\n          <GetStartedButton type=\"primary\" onClick={() => this.setState({showControls: true})}>Let's Play</GetStartedButton>\n        </ExplanationBox>\n      )}\n    </BodyContainer>\n  )}\n\n  handleChange = (imageName, property, value) => {\n    this.setState(previousState => ({\n      ...previousState,\n      [imageName]: {\n        ...previousState[imageName],\n          [property]: value,\n      }\n    })\n  )}\n};\n\nexport default BodyContent;\n","import React, { Component } from \"react\";\nimport BodyContent from \"./BodyContent\";\nimport \"antd/dist/antd.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BodyContent />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/smoke.4f02f3b9.png\";"],"sourceRoot":""}