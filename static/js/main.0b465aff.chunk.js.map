{"version":3,"sources":["components/Spins.js","components/ColorButtons/ColorsForButtons.js","components/Colors.js","components/ImageControls/SliderInput.js","components/ImageControls/DirectionButtons.js","components/ImageControls/EaseButtons.js","components/ImageControls/ImageControls.js","components/ColorButtons/Button.js","components/ColorButtons/ButtonList.js","components/ControlPanel.js","components/BodyContent.js","components/App.js","serviceWorker.js","index.js","images/smoke.png"],"names":["spinRight","keyframes","_templateObject","spinLeft","_templateObject2","ColorsForButtons","sky","bluegray","royal","charcoal","navy","Tray","styled","div","SliderInput_templateObject","SliderName","p","SliderInput_templateObject2","SliderBox","_templateObject3","SliderInput","props","property","handleChange","name","max","min","defaultValue","formatter","firstIcon","secondIcon","react_default","a","createElement","slider","onChange","value","tipFormatter","slider-rail-background-color","RadioGroup","Radio","Group","DirectionButtonsContainer","DirectionButtons_templateObject","DirectionButtons","_this$props","this","setDirection","direction","event","target","es_radio","color","React","Component","EaseButtonsContainer","EaseButtons_templateObject","EaseButtons","setEase","animationTimingFunction","EaseButtons_RadioGroup","speedFormatter","concat","opacityFormatter","sizeFormatter","ImageControlsContainer","ImageControls_templateObject","ControlsTitle","h2","ImageControls_templateObject2","ImageControls","imageName","layerSettings","ImageControls_SliderInput","speed","opacity","size","leftPosition","topPosition","DirectionButtons_DirectionButtons","directionValue","EaseButtons_EaseButtons","ease","ColorName","Button_templateObject","ColorButton","button","Button_templateObject2","_ref","Button","_ref2","hexValue","setBackgroundColor","onClick","ButtonContainer","ButtonList_templateObject","ButtonList","setColor","console","log","_","toPairs","colors","map","_ref3","Object","slicedToArray","colorName","ColorButtons_Button","key","ControlsContainer","ControlPanel_templateObject","ImageBox","ControlPanel_templateObject2","ControlPanel","components_ImageControls_ImageControls","assign","ColorButtons_ButtonList","sizeInPixels","BodyContainer","BodyContent_templateObject","SmokeBackground","BodyContent_templateObject2","backgroundColor","Image","img","BodyContent_templateObject3","result","spin","BodyContent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","previousState","objectSpread","defineProperty","state","background","lower","back","middle","front","src","smoke","alt","components_ControlPanel","App","components_BodyContent","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.0b465aff.chunk.js","sourcesContent":["import styled, { keyframes} from \"styled-components\";\n\nexport const Extraslow = \"250s\";\nexport const Slow = \"200s\";\nexport const Medium = \"150s\";\nexport const Fast = \"90s\";\nexport const Extrafast = \"30s\";\n\nexport const spinRight = keyframes`\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n`;\n\nexport const spinLeft = keyframes`\n  from { transform: rotate(360deg); }\n  to { transform: rotate(0deg); }\n`;\n\nexport const spin = (direction) => {\n  let result;\n  switch (direction) {\n    case \"right\":\n      result = spinRight;\n      break;\n    case \"left\":\n      result = spinLeft;\n      break;\n    // default:\n    //   result = spinRight;\n  }\n  return result;\n};\n","import { mysky, myroyal, mycharcoal, mynavy, mybluegray } from '../Colors';\n\nexport default {\n  sky: mysky,\n  bluegray: mybluegray,\n  royal: myroyal,\n  charcoal: mycharcoal,\n  navy: mynavy,\n}","export const mylightestgray = '#B2B2B2';\nexport const myemerald = '#07926A';\nexport const mycharcoal = '#44444C';\nexport const myruby = '#BF2927';\nexport const mydarkmint = '#1EBC93';\nexport const mycoral = '#FC6464';\nexport const myamethyst = '#863DB8';\nexport const mysaphire = '#12219D';\nexport const mymint = '#7AE2D2';\nexport const mygold = '#DAA41E';\nexport const myroyal = '#14439C';\nexport const myviolet = '#541C8C';\nexport const mybluegray = '#6C7C8C';\nexport const mynavy = '#06095A';\nexport const mysky = '#84B4E4';\n// export const GrayGradient = \"linear-gradient(${mediumgray}, ${lightestgray}, white)\";\n// export const MintGradient = \"linear-gradient(${mint}, ${lightmint}, white)\";\n// export const CoralGradient = \"linear-gradient(${coral}, ${lightcoral}, white)\";\n\n\n\n// lightestgray, emerald, charcoal, ruby, darkmint, coral, amethyst, saphire","import React from \"react\";\nimport { Slider, Icon } from 'antd';\nimport styled from 'styled-components';\nimport { mycoral, mycharcoal } from '../Colors';\n\nconst Tray = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  `;\n\nconst SliderName = styled.p`\n  /* font-size: 1.5em; */\n  color: ${mycharcoal};\n  `;\n\nconst SliderBox = styled.div`\n  /* display: flex;\n  flex-direction: row; */\n  position: relative;\n  width: 90%;\n  padding: 0px 20px;\n  .anticon {\n    position: absolute;\n    margin-top: 0px;\n    top: -2px;\n    width: 16px;\n    height: 16px;\n    line-height: 1;\n    /* font-size: 16px; */\n    color: white;\n    &:first-child {\n      left: 0;\n    }\n    &:last-child {\n      right: 0;\n    }\n  }\n  .ant-slider {\n    margin-top: 0;\n  }\n`;\n\nconst SliderInput = (props) => {\n  const { \n    property,\n    handleChange,\n    name,\n    max,\n    min,\n    defaultValue,\n    formatter,\n    firstIcon,\n    secondIcon \n  } = props;\n\n  const changeSetting = (value) => {\n    // console.log(\"Change value to: \", value);\n    return (\n      handleChange(name, property, value)\n      // handleChange(imageName, property, value)\n    )\n  };\n\n  return (\n    <Tray>\n      <SliderName>{property}</SliderName>\n      <SliderBox>\n        {/* <Icon type={firstIcon} /> */}\n        <Slider \n          onChange={changeSetting}\n          defaultValue={defaultValue}\n          min={min}\n          max={max}\n          tipFormatter={formatter}\n          slider-rail-background-color={mycoral}\n           />\n        {/* <Icon type={secondIcon} /> */}\n      </SliderBox>\n    </Tray>\n  )\n};\n\nexport default SliderInput;\n\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Radio } from 'antd';\nimport { mylightestgray } from '../Colors';\n\nconst RadioGroup = Radio.Group;\n\nconst DirectionButtonsContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  position: relative;\n  width: 100%;\n  align-items: start;\n  border-bottom: 1px solid ${mylightestgray};\n  padding: 5px 0px;\n  `;\n\nexport default class DirectionButtons extends React.Component {\n  render() {\n    const { name, setDirection, direction } = this.props;\n    return (\n      <DirectionButtonsContainer>\n        <RadioGroup name={name} onChange={(event) => setDirection(event.target.value)} value={direction}>\n          <Radio color={mylightestgray} value={\"left\"}>Spin Left</Radio>\n          <Radio color={mylightestgray} value={\"right\"}>Spin Right</Radio>\n        </RadioGroup>\n      </DirectionButtonsContainer>\n    );\n  }\n};\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Radio } from 'antd';\n\n\nconst RadioGroup = Radio.Group;\n\nconst EaseButtonsContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  position: relative;\n  width: 100%;\n  align-items: start;\n  padding: 5px 0px;\n  `;\n\nexport default class EaseButtons extends React.Component {\n  render() {\n    const { name, setEase, animationTimingFunction } = this.props;\n    return (\n      <EaseButtonsContainer>\n        <RadioGroup name={name} onChange={(event) => setEase(event.target.value)} value={animationTimingFunction}>\n          <Radio value={\"ease-in\"}>Ease In</Radio>\n          <Radio value={\"ease-out\"}>Ease Out</Radio>\n          <Radio value={\"ease-in-out\"}>Ease In Out</Radio>\n          <Radio value={\"linear\"}>Linear</Radio>\n        </RadioGroup>\n      </EaseButtonsContainer>\n    );\n  }\n};\n","import React from \"react\";\nimport styled from 'styled-components';\nimport SliderInput from './SliderInput';\n// import { Radio } from 'antd';\nimport DirectionButtons from './DirectionButtons';\nimport EaseButtons from './EaseButtons';\nimport { mycoral, mylightestgray } from '../Colors';\n\n\nconst MAX_SPEED = 300;\nconst MIN_SPEED = 15;\nconst MIN_SIZE = 500;\nconst MAX_SIZE = 2500;\nconst MIN_OPACITY = 0;\nconst MAX_OPACITY = 100;\nconst MIN_POSITION = -900;\nconst MAX_POSITION = 900;\n\n\nconst speedFormatter = value => {\n  return `${value}s`;\n};\nconst opacityFormatter = value => {\n  return `${value}%`;\n};\nconst sizeFormatter = value => {\n  return `${value}px`;\n};\n\nconst convertFromFraction = value => {\n  console.log(\"Converted from fraction: \", value*100);\n  return value*100;\n}\n\nconst ImageControlsContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row wrap;\n  position: relative;\n  /* min-height: 200px; */\n  width: 100%;\n  align-items: start;\n  justify-content: space-around;\n  margin: 0px 10px;\n  padding: 5px 15px;\n  /* background-color: ${mylightestgray}; */\n  /* border-radius: 7px; */\n  `;\n\nconst ControlsTitle = styled.h2`\n  color: ${mycoral};\n  width: 100%;\n  /* color: ${mycoral}; */\n  `;\n\n// handleChange,\n// imageName,\n// max,\n// min,\n// defaultValue,\n// formatter,\n// firstIcon,\n// secondIcon \n\nconst ImageControls = (props) => {\n  // console.log(\"Props passed to ImageControls: \", props);\n  const { handleChange, imageName } = props;\n  const layerSettings = props[imageName];\n\n  return (\n    <ImageControlsContainer >\n      <ControlsTitle >{imageName}</ControlsTitle>\n      <SliderInput \n        name={imageName} \n        property=\"speed\"\n        handleChange={handleChange}\n        max={MAX_SPEED}\n        min={MIN_SPEED}\n        defaultValue={layerSettings.speed}\n        value={layerSettings.speed}\n        formatter={speedFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"opacity\"\n        handleChange={handleChange}\n        max={MAX_OPACITY}\n        min={MIN_OPACITY}\n        defaultValue={layerSettings.opacity}\n        value={layerSettings.opacity}\n        formatter={opacityFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"size\"\n        handleChange={handleChange}\n        max={MAX_SIZE}\n        min={MIN_SIZE}\n        defaultValue={layerSettings.size}\n        value={layerSettings.size}\n        formatter={sizeFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"leftPosition\"\n        handleChange={handleChange}\n        max={MAX_POSITION}\n        min={MIN_POSITION}\n        defaultValue={layerSettings.leftPosition}\n        value={layerSettings.leftPosition}\n        formatter={sizeFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <SliderInput \n        name={imageName} \n        property=\"topPosition\"\n        handleChange={handleChange}\n        max={MAX_POSITION}\n        min={MIN_POSITION}\n        defaultValue={layerSettings.topPosition}\n        value={layerSettings.topPosition}\n        formatter={sizeFormatter}\n        firstIcon=\"up\"\n        secondIcon=\"down\" />\n      <DirectionButtons \n        name={imageName} \n        direction={layerSettings.direction} \n        setDirection={(directionValue) => \n        handleChange(imageName, \"direction\", directionValue)} />\n      <EaseButtons \n        name={imageName} \n        animationTimingFunction={layerSettings.animationTimingFunction} \n        setEase={(ease) => \n          handleChange(imageName, \"animationTimingFunction\", ease)} />\n    </ImageControlsContainer>\n  );\n};\n\n// ReactDOM.render(<ImageControls min={0} max={20} />, mountNode);\n\nexport default ImageControls;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ColorName = styled.h2`\n  color: white;\n  text-transform: uppercase;\n  margin: 0;\n  `;\n\nconst ColorButton = styled.button`\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  margin: 3px 0px;\n  border: 5px solid white;\n  border-radius: 15px;\n  background-color: ${ ({color}) => color };\n  `;\n\n\nconst Button = ({ name, hexValue, setBackgroundColor }) => (\n    <ColorButton color={hexValue} onClick={() => setBackgroundColor(hexValue)} >\n      <ColorName color={hexValue}>\n        {name}\n      </ColorName>\n    </ColorButton>\n);\n\nexport default Button;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from './Button';\nimport colors from \"./ColorsForButtons\";\nimport _ from \"lodash\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  position: relative;\n  /* margin: 5px; */\n  /* align-items: stretch;\n  align-content: stretch;\n  justify-content: stretch; */\n  `;\n\nconst ButtonList = ({ handleChange, imageName }) => {\n  const setColor = (hexValue) => {\n    console.log(hexValue);\n    return (\n      handleChange(imageName, \"color\", hexValue)\n  )};\n\n  return (\n    <ButtonContainer> {\n    _.toPairs(colors).map( ([colorName, hexValue]) => (\n        <Button setBackgroundColor={setColor} key={hexValue} name={colorName} hexValue={hexValue} />\n    ))\n  }</ButtonContainer>\n)};\n\n\nexport default ButtonList;","import React from \"react\";\nimport styled from 'styled-components';\nimport ImageControls from './ImageControls/ImageControls';\nimport ButtonList from './ColorButtons/ButtonList';\n\nconst ControlsContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: start;\n  justify-content: center;\n  `;\n\nconst ImageBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  `;\n\nconst ControlPanel = (props) => {\n  return (\n    <ControlsContainer>\n        <ImageBox>\n          <ImageControls {...props} imageName=\"lower\" />\n          <ImageControls {...props} imageName=\"back\" />\n          <ImageControls {...props} imageName=\"middle\" />\n          <ImageControls {...props} imageName=\"front\" />\n        </ImageBox>\n      <ButtonList {...props} imageName=\"background\" />\n    </ControlsContainer>\n  );\n};\n\nexport default ControlPanel;","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport smoke from \"../images/smoke.png\";\nimport { spin } from \"./Spins\";\nimport colors from \"./ColorButtons/ColorsForButtons\";\nimport ControlPanel from './ControlPanel';\n\nconst { charcoal } = colors;\n\nconst speedInSeconds = (speed) => {\n  return `${speed}s`\n};\nconst sizeInPixels = (size) => {\n  return `${size}px`\n};\nconst convertToFraction = value => {\n  return value/100;\n};\n\nconst BodyContainer = styled.div`\n  box-sizing: border-box;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  `;\n\nconst SmokeBackground = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  height: 55vh;\n  width: 100vw;\n  overflow: hidden;\n  background: ${props => props.backgroundColor};\n  `;\n\nconst Image = styled.img`\n  name: ${props => props.imageName};\n  position: absolute;  \n  left: ${props => sizeInPixels(props.leftPosition)};\n  top: ${props => sizeInPixels(props.topPosition)};\n  opacity: ${props => convertToFraction(props.opacity)};\n  width: auto;\n  margin: 0px;\n  height: ${props => sizeInPixels(props.size)};\n  animation: \n    ${props => spin(props.direction)} \n    ${ props => speedInSeconds(props.speed) } \n    ${props => props.animationTimingFunction} \n    infinite;\n  `;\n\nclass BodyContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background: {\n        color: charcoal,\n      },\n      lower: {  \n        imageName: \"lower\",\n        leftPosition: -350,\n        topPosition: 50,\n        speed: 80,\n        direction: \"left\",\n        opacity: 20,\n        size: 2200,\n        animationTimingFunction: \"linear\",\n      },\n      back: {  \n        imageName: \"back\",\n        speed: 150,\n        leftPosition: -600,\n        topPosition: -500,\n        direction: \"right\",\n        size: 2400,\n        opacity: 60,\n        animationTimingFunction: \"linear\",\n      },\n      middle: {  \n        imageName: \"middle\",\n        speed: 150,\n        leftPosition: -300,\n        topPosition: -200,\n        direction: \"left\",\n        size: 1400,\n        opacity: 60,\n        animationTimingFunction: \"linear\",\n      },\n      front: {  \n        imageName: \"front\",\n        speed: 150,\n        direction: \"right\",\n        leftPosition: 250,\n        topPosition: -160,\n        opacity: 75,\n        size: 1700,\n        animationTimingFunction: \"linear\",\n      },\n    }\n  }\n\n  render() {\n    return (\n      <BodyContainer>\n      <SmokeBackground backgroundColor={this.state.background.color}>\n        <Image {...this.state.back} src={smoke} alt=\"Smoke\" />\n        <Image {...this.state.middle} src={smoke} alt=\"Smoke\" />\n        <Image {...this.state.front} src={smoke} alt=\"Smoke\" />\n        <Image {...this.state.lower} src={smoke} alt=\"Smoke\" />\n      </SmokeBackground>\n      <ControlPanel {...this.state} handleChange={this.handleChange} />\n    </BodyContainer>\n  )}\n\n  handleChange = (imageName, property, value) => {\n    this.setState(previousState => ({\n      ...previousState,\n      [imageName]: {\n        ...previousState[imageName],\n          [property]: value,\n      }\n    })\n    )\n    // console.log( \"current state: \", this.state);  \n  }\n};\n\n\nexport default BodyContent;","import React, { Component } from \"react\";\nimport BodyContent from \"./BodyContent\";\nimport \"antd/dist/antd.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n        <BodyContent />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/smoke.d31465e6.png\";"],"sourceRoot":""}